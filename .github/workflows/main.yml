name: Node GOAT Assignment 1

on:
  pull_request: {}
  workflow_dispatch: {}
  push:
  # pushes changes to the main
    branches: ["master", "main"]
  
jobs:
  semgrep:
    name: semgrep/ci 
    # runs on self-hosted runner
    runs-on: self-hosted
    container:
    # docker image used
      image: returntocorp/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      # authenticates with a docker registry
      - uses: actions/checkout@v3
      # generates a sarif semgrep file
      # - run: semgrep --sarif --output semgrep-sast.sarif --config "p/default"
      - run: semgrep --sarif --output /path/to/semgrep-sast.sarif --config "p/default"
      

  build:
    # runs on self-hosted
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # clone repo into runner environment
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        # authenticates with a docker registry
        uses: docker/login-action@v3
        with:
        # gets the user name and password from github secrets
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        # sets up docker buildx to be used in different platforms
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        # pushes the code to docker
        uses: docker/build-push-action@v5
        with:
          # builds a docker image with the latest updates
          context: .
          file: ./Dockerfile
          push: true
          tags: katkat055/itas276-nodegoat-kg:latest

  sca-snyk:
    name: Vulnerabilities with Snyk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Snyk to check Docker images for vulnerabilities
        # it will continue even if it runs into an error
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
        # gets the snyk token from github secrets
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          # gets the docker image and reports vulnerabilities
          image: katkat055/itas276-nodegoat-kg:latest
          args: --file=Dockerfile
      - name: Upload SARIF file for Snyk
        uses: actions/upload-artifact@v3
        with:
          name: snyk-sca.sarif
          path: snyk.sarif

  SAST-Semgrep:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
        # clones repo to runner environment
      - name: clone application source code
        uses: actions/checkout@v3
        # performs a full semgrep scan and generates a semgrep-sast.sarif file
      - name: full semgrep scan
        run: | 
          # semgrep --sarif --output semgrep-sast.sarif --config "p/default"
          semgrep --sarif --output /path/to/output_directory/semgrep-sast.sarif --config "p/default"
      - name: save report as pipeline artifact
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-sast.sarif
          path: semgrep-sast.sarif
